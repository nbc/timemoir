[{"path":"https://nbc.github.io/timemoir/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 timemoir authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nbc.github.io/timemoir/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Chuche. Author, maintainer.","code":""},{"path":"https://nbc.github.io/timemoir/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chuche N (2024). timemoir: Check Memory Used Functions. R package version 0.4.0.9000, https://nbc.github.io/timemoir/.","code":"@Manual{,   title = {timemoir: Check Memory Used By Functions},   author = {Nicolas Chuche},   year = {2024},   note = {R package version 0.4.0.9000},   url = {https://nbc.github.io/timemoir/}, }"},{"path":"https://nbc.github.io/timemoir/index.html","id":"timemoir","dir":"","previous_headings":"","what":"Check Memory Used By Functions","title":"Check Memory Used By Functions","text":"goal timemoir get memory usage large functions many things (like duckdb arrow calculations). utils::Rprof profmem don’t work well use case. achieve goal, timemoir fork R processus execute function main processus read memory usage /proc/<pid>/status. bit crude works well . package reads /proc/<pid>/status, doesn’t work windows.","code":""},{"path":"https://nbc.github.io/timemoir/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Check Memory Used By Functions","text":"can install development version timemoir like :","code":"devtools::install_github(\"nbc/timemoir\")"},{"path":"https://nbc.github.io/timemoir/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Check Memory Used By Functions","text":"","code":"library(timemoir)  timemoir(Sys.sleep(1), Sys.sleep(2), Sys.sleep()) #> benchmarking Sys.sleep(1) : . #> benchmarking Sys.sleep(2) : .. #> benchmarking Sys.sleep()  : #> # A tibble: 3 × 5 #>   fname        duration error                                  max_mem start_mem #>   <chr>           <dbl> <chr>                                    <dbl>     <dbl> #> 1 Sys.sleep(1)     1.01  <NA>                                    84504     83224 #> 2 Sys.sleep(2)     2.01  <NA>                                    83548     83292 #> 3 Sys.sleep()     NA    \"argument \\\"time\\\" is missing, with n…   81388     83436"},{"path":"https://nbc.github.io/timemoir/reference/timemoir.html","id":null,"dir":"Reference","previous_headings":"","what":"Benchmark functions — timemoir","title":"Benchmark functions — timemoir","text":"launch functions background watch pid file get used memory. function best used long running functions like arrow duckdb requests fit classic benchmarking methods like utils::Rprof profmem. memory extracted every interval sec /proc/<pid>/status start_mem measured just launching function. max_mem max measured mem","code":""},{"path":"https://nbc.github.io/timemoir/reference/timemoir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benchmark functions — timemoir","text":"","code":"timemoir(..., verbose = TRUE, interval = 0.1)"},{"path":"https://nbc.github.io/timemoir/reference/timemoir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benchmark functions — timemoir","text":"... functions benchmark. verbose boolean. TRUE (default) print information messages. interval (default 0.1) sleep interval memory check sec","code":""},{"path":"https://nbc.github.io/timemoir/reference/timemoir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Benchmark functions — timemoir","text":"result tibble one row per benchmarked function 5 columns: fname, function name (string). duration duration (sec) function NA function fails. error, error message function fails, NA otherwise. start_mem memory used function benchmark (KB). max_mem max used memory (KB).","code":""},{"path":"https://nbc.github.io/timemoir/reference/timemoir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Benchmark functions — timemoir","text":"","code":"timemoir(Sys.sleep(2), Sys.sleep()) #> benchmarking Sys.sleep(2) : .. #> benchmarking Sys.sleep()  :  #> # A tibble: 2 × 5 #>   fname        duration error                                  start_mem max_mem #>   <chr>           <dbl> <chr>                                      <dbl>   <dbl> #> 1 Sys.sleep(2)     2.00  NA                                       124096  124864 #> 2 Sys.sleep()     NA    \"argument \\\"time\\\" is missing, with n…    124096  122688  timemoir(Sys.sleep(1), Sys.sleep(), verbose=FALSE) #> # A tibble: 2 × 5 #>   fname        duration error                                  start_mem max_mem #>   <chr>           <dbl> <chr>                                      <dbl>   <dbl> #> 1 Sys.sleep(1)     1.00  NA                                       124128  125024 #> 2 Sys.sleep()     NA    \"argument \\\"time\\\" is missing, with n…    124128  122720"},{"path":"https://nbc.github.io/timemoir/news/index.html","id":"timemoir-0409000","dir":"Changelog","previous_headings":"","what":"timemoir 0.4.0.9000","title":"timemoir 0.4.0.9000","text":"add interval parameter (default 0.1s) max_mem really max_mem add start_mem column result tibble","code":""},{"path":"https://nbc.github.io/timemoir/news/index.html","id":"timemoir-0309000","dir":"Changelog","previous_headings":"","what":"timemoir 0.3.0.9000","title":"timemoir 0.3.0.9000","text":"allow benchmarking multiple functions using ellipsis. max_mem returned now max_mem - min_mem. add verbose parameter.","code":""},{"path":"https://nbc.github.io/timemoir/news/index.html","id":"timemoir-0209000","dir":"Changelog","previous_headings":"","what":"timemoir 0.2.0.9000","title":"timemoir 0.2.0.9000","text":"First release","code":""}]
